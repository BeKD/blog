<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chen.dao.BlogDao">

    <resultMap id="Blog" type="com.chen.entity.Blog">
        <id property="id" column="blog_id" />
        <result property="title" column="blog_title"/>
        <result property="content" column="blog_content"/>
        <result property="firstPicture" column="blog_first_picture"/>
        <result property="flag" column="blog_flag"/>
        <result property="views" column="blog_views"/>
        <result property="commentCount" column="blog_comment_count"/>
        <result property="appreciation" column="blog_appreciation"/>
        <result property="shareStatement" column="blog_share_statement"/>
        <result property="commentabled" column="blog_commentabled"/>
        <result property="published" column="blog_published"/>
        <result property="recommend" column="blog_recommend"/>
        <result property="createTime" column="blog_create_time"/>
        <result property="updateTime" column="blog_update_time"/>
        <result property="description" column="blog_description"/>

        <association property="type" javaType="com.chen.entity.Type">
            <id property="id" column="type_id"/>
            <result property="name" column="type_name"/>
            <result property="articleCount" column="type_article_count"/>
        </association>

        <association property="user" javaType="com.chen.entity.User">
            <id property="id" column="user_id"/>
            <result property="nickname" column="user_nickname"/>
            <result property="username" column="user_username"/>
            <result property="password" column="user_password"/>
            <result property="email" column="user_email"/>
            <result property="avatar" column="user_avatar"/>
            <result property="type" column="user_type"/>
            <result property="createTime" column="user_createTime"/>
            <result property="updateTime" column="user_updateTime"/>
        </association>

        <collection property="tags" ofType="com.chen.entity.Tag">
            <id property="id" column="tag_id"/>
            <result property="name" column="tag_name"/>
            <result property="articleCount" column="tag_article_count"/>
        </collection>

        <collection property="comments" ofType="com.chen.entity.Comment">
            <id property="id" column="comment_id"/>
            <result property="nickname" column="comment_name"/>
            <result property="email" column="comment_email"/>
            <result property="content" column="comment_content"/>
            <result property="createTime" column="comment_createTime"/>
            <result property="blogId" column="comment_blogId"/>
            <result property="parentCommentId" column="comment_parentCommentId"/>
            <result property="parentNickname" column="comment_parentNickname"/>
            <result property="adminComment" column="comment_adminComment"/>
        </collection>
    </resultMap>

    <!--查询所有文章-->
    <select id="listAllBlogs" resultMap="Blog">
        select b.id as blog_id, b.title as blog_title, b.content as blog_content, b.first_picture as blog_first_picture, b.flag as blog_flag, b.views as blog_views, b.comment_count as blog_comment_count, b.appreciation as blog_appreciation,
               b.share_statement as blog_share_statement, b.commentabled as blog_commentabled, b.published as blog_published, b.recommend as blog_recommend,
               b.create_time as blog_create_time, b.update_time as blog_update_time, b.description as blog_description,
               t.id as type_id, t.name as type_name, t.article_count as type_article_count,
               ta.id as tag_id, ta.name as tag_name, ta.article_count as tag_article_count,
               u.nickname as user_nickname, u.avatar as user_avatar, u.email as user_email
        from myblog.t_blog b, myblog.t_type t, myblog.t_blog_tags bt, myblog.t_tag ta, myblog.t_user u
        where b.type_id = t.id and  u.id = b.user_id and b.id = bt.blog_id and bt.tag_id = ta.id
        order by b.update_time desc
    </select>

    <!--查询所有文章 by pageNum-->
    <select id="listBlogs" resultMap="Blog">
        select b.id as blog_id, b.title as blog_title, b.content as blog_content, b.first_picture as blog_first_picture, b.flag as blog_flag, b.views as blog_views, b.comment_count as blog_comment_count, b.appreciation as blog_appreciation,
               b.share_statement as blog_share_statement, b.commentabled as blog_commentabled, b.published as blog_published, b.recommend as blog_recommend,
               b.create_time as blog_create_time, b.update_time as blog_update_time, b.description as blog_description,
               t.id as type_id, t.name as type_name, t.article_count as type_article_count,
               ta.id as tag_id, ta.name as tag_name, ta.article_count as tag_article_count,
               u.nickname as user_nickname, u.avatar as user_avatar, u.email as user_email
        from myblog.t_blog b, myblog.t_type t, myblog.t_blog_tags bt, myblog.t_tag ta, myblog.t_user u
        where b.type_id = t.id and  u.id = b.user_id and b.id = bt.blog_id and bt.tag_id = ta.id
        order by b.update_time desc
        limit #{pageNum}, #{pageSize}
    </select>

    <!--查询文章 by id-->
    <select id="getBlogById" resultMap="Blog" >
        select b.id as blog_id, b.title as blog_title, b.content as blog_content, b.first_picture as blog_first_picture, b.flag as blog_flag, b.views as blog_views, b.comment_count as blog_comment_count, b.appreciation as blog_appreciation,
               b.share_statement as blog_share_statement, b.commentabled as blog_commentabled, b.published as blog_published, b.recommend as blog_recommend,
               b.create_time as blog_create_time, b.update_time as blog_update_time, b.description as blog_description,
               t.id as type_id, t.name as type_name, t.article_count as type_article_count,
               ta.id as tag_id, ta.name as tag_name, ta.article_count as tag_article_count,
               u.nickname as user_nickname, u.avatar as user_avatar, u.email as user_email
        from myblog.t_blog b, myblog.t_type t, myblog.t_blog_tags bt, myblog.t_tag ta, myblog.t_user u
        where b.id = #{id} and b.type_id = t.id and  u.id = b.user_id and b.id = bt.blog_id and bt.tag_id = ta.id
    </select>

    <!--查询首页推荐的文章-->
    <select id="listRecommendBlogs" resultMap="Blog">
        select b.id as blog_id, b.title as blog_title, b.first_picture as blog_first_picture, b.views as blog_views, b.comment_count as blog_comment_count, b.update_time as blog_update_time, b.description as blog_description
        from myblog.t_blog b
        where b.recommend = true
        order by b.update_time desc
        limit 4;
    </select>

    <!--查询 by 分类-->
    <select id="listBlogsByTypeId" resultMap="Blog">
        select b.id as blog_id, b.title as blog_title, b.content as blog_content, b.first_picture as blog_first_picture, b.flag as blog_flag, b.views as blog_views, b.comment_count as blog_comment_count, b.appreciation as blog_appreciation,
               b.share_statement as blog_share_statement, b.commentabled as blog_commentabled, b.published as blog_published, b.recommend as blog_recommend,
               b.create_time as blog_create_time, b.update_time as blog_update_time, b.description as blog_description,
               t.name as type_name,
               u.nickname as user_nickname, u.avatar as user_avatar
        from myblog.t_blog b, myblog.t_type t,myblog.t_user u
        where b.type_id = t.id and u.id = b.user_id and b.type_id = #{typeId}
        order by b.update_time desc
    </select>

    <!--查询 by 标签-->
    <select id="listBlogsByTagId" resultMap="Blog">
        select b.id as blog_id, b.title as blog_title, b.content as blog_content, b.first_picture as blog_first_picture, b.flag as blog_flag, b.views as blog_views, b.comment_count as blog_comment_count, b.appreciation as blog_appreciation,
               b.share_statement as blog_share_statement, b.commentabled as blog_commentabled, b.published as blog_published, b.recommend as blog_recommend,
               b.create_time as blog_create_time, b.update_time as blog_update_time, b.description as blog_description,
               t.name as type_name,
               u.nickname as user_nickname, u.avatar as user_avatar
        from myblog.t_blog b, myblog.t_blog_tags bt, myblog.t_tag t,myblog.t_user u
        where b.id = bt.blog_id and bt.tag_id = t.id and u.id = b.user_id and bt.tag_id = #{tagId}
        order by b.update_time desc
    </select>

    <!--新增保存文章-->
    <insert id="saveBlog" parameterType="com.chen.entity.Blog">
        insert into myblog.t_blog (id,title, content, first_picture, flag,
                                   views, comment_count, appreciation, share_statement, commentabled, published,
                                   recommend, create_time, update_time, type_id, user_id, description)
        values (#{id},#{title},#{content},#{firstPicture},#{flag},#{views},#{commentCount},#{appreciation},
                #{shareStatement},#{commentabled},#{published},#{recommend},#{createTime},
                #{updateTime},#{type.id},#{user.id},#{description});
    </insert>

    <!--编辑修改文章-->
    <update id="updateBlog" parameterType="com.chen.entity.Blog">
        update myblog.t_blog set published = #{published},flag = #{flag} ,
                                 title = #{title}, content = #{content}, type_id = #{type.id},
                                 first_picture = #{firstPicture} , description = #{description} , recommend = #{recommend} ,
                                 share_statement = #{shareStatement}, appreciation = #{appreciation},
                                 commentabled = #{commentabled} ,update_time = #{updateTime}
        where id = #{id};
    </update>

    <!--删除文章 by id-->
    <delete id="deleteBlogById">
        delete from myblog.t_blog where id = #{id}
    </delete>

    <!--文章访问自增-->
    <update id="updateViews" parameterType="com.chen.entity.Blog">
        update myblog.t_blog b set b.views = b.views+1 where b.id = #{id}
    </update>


    <!--首页博客列表-->
    <select id="getFirstPageBlog" resultMap="Blog">
        select b.id as blog_id, b.title as blog_title, b.first_picture as blog_first_picture, b.views as blog_views, b.comment_count as blog_comment_count, b.update_time as blog_update_time, b.description as blog_description,
               t.name as type_name,
               u.nickname as user_nickname, u.avatar as user_avatar
        from myblog.t_blog b, myblog.t_type t,myblog.t_user u
        where b.type_id = t.id and  u.id = b.user_id order by b.update_time desc
    </select>

    <!--最新文章-->
    <select id="listNewBlogs" resultMap="Blog">
        select b.id as blog_id, b.title as blog_title, b.first_picture as blog_first_picture, b.views as blog_views, b.comment_count as blog_comment_count, b.update_time as blog_update_time, b.description as blog_description
        from myblog.t_blog b
        order by b.update_time desc
        limit 3;
    </select>

    <!--前台页面搜索文章 by title,content-->
    <select id="listBlogBySearch" resultMap="Blog">
        <bind name="pattern" value="'%' + query + '%'" />
        select b.id as blog_id, b.title as blog_title, b.first_picture as blog_first_picture, b.views as blog_views, b.comment_count as blog_comment_count, b.update_time as blog_update_time, b.description as blog_description,
               t.name as type_name,
               u.nickname as user_nickname, u.avatar as user_avatar
        from myblog.t_blog b, myblog.t_type t,myblog.t_user u
        where b.type_id = t.id and  u.id = b.user_id and (b.title like #{pattern} or b.content like  #{pattern})
        order by b.update_time desc
    </select>

    <!--管理员后台搜索 by title, type-->
    <select id="listBlogBySearchTitleOrType" resultMap="Blog">
        <bind name="pattern" value="'%' + title + '%'" />
        select b.id as blog_id, b.title as blog_title, b.update_time as blog_update_time, b.published as blog_published, b.recommend as blog_recommend,
                t.name as type_name
        from myblog.t_blog b ,myblog.t_type t
        <where>
            <if test="true">
                b.type_id = t.id
            </if>
            <if test="typeId != null">
                and b.type_id = #{typeId}
            </if>
            <if test="title != null and title != ''">
                and b.title like #{pattern}
            </if>
        </where>
    </select>


    <!--博客详情查询-->
    <select id="getDetailedBlog" resultMap="Blog">
        select b.id as blog_id, b.first_picture as blog_first_picture, b.flag as blog_flag, b.title as blog_title, b.content as blog_content,b.views as blog_views, b.comment_count as blog_comment_count, b.update_time as blog_update_time, b.commentabled as blog_commentabled, b.share_statement as blog_share_statement, b.appreciation as blog_appreciation,
               t.name as type_name
               u.nickname as user_name, u.avatar as user_avatar,
        from myblog.t_blog b,myblog.t_user u, myblog.t_type t
        where b.user_id = u.id and b.type_id = t.id and b.id = #{id}
    </select>

    <!--查询出文章评论数量并更新-->
    <update id="getCommentCountById" parameterType="com.chen.entity.Blog">
        update myblog.t_blog b
        set b.comment_count = (
            select count(*) from myblog.t_comment c where c.blog_id = #{id} and b.id = #{id}
        ) WHERE b.id = #{id}
    </update>

    <!--统计博客信息-->
    <select id="getBlogTotal" resultType="Integer">
        select count(*) from myblog.t_blog
    </select>
    <select id="getBlogViewTotal" resultType="Integer">
        select sum(views) from myblog.t_blog
    </select>
    <select id="getBlogCommentTotal" resultType="Integer">
        select count(*) from myblog.t_comment
    </select>
    <select id="getBlogMessageTotal" resultType="Integer">
        select count(*) from myblog.t_message
    </select>

    <!--查询刚刚插入数据库的博客id-->
    <select id="getMaxBlogId" resultType="int">
        select max(id) from myblog.t_blog
    </select>

    <select id="findGroupYear" resultType="String">
        select distinct DATE_FORMAT(b.update_time,'%Y') as year
        from myblog.t_blog b
        order by year desc
    </select>

    <select id="findBlogsByYear" resultMap="Blog">
        select b.id as blog_id, b.first_picture as blog_first_picture, b.flag as blog_flag, b.title as blog_title, b.content as blog_content,b.views as blog_views, b.update_time as blog_update_time
        from myblog.t_blog b
        where DATE_FORMAT(b.update_time,'%Y') = #{year}
    </select>

</mapper>